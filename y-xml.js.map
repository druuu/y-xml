{"version":3,"sources":["../yjs/node_modules/browser-pack/_prelude.js","src/Xml.js","y-xml.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","extend","Y","requestModules","then","YXml","_Y$Array$typeDefiniti","os","_model","_content","attributes","tagname","init","this","_this","getPrototypeOf","dom","_domObserver","_eventListenerHandler","utils","EventListenerHandler","_setDom","_get","events","userEvents","forEach","event","type","push","index","node","valueId","callEventListeners","observe","name","_createClass","key","disconnect","destroy","pos","types","Array","isArray","v","isTypeDefinition","_this2","Promise","resolve","token","mutualExclude","records","takeRecords","_domObserverListener","_mutualExclude","mutations","mutation","set","attributeName","target","getAttribute","addedNodes","nextSibling","findIndex","c","window","Text","textContent","Element","Xml","insert","content","isInserted","_tryInsertDom","removedNodes","MutationObserver","childList","succ","insertBefore","sort","b","setAttribute","removeAttribute","textNode","xml","getDom","newNode","id","d","remove","_this3","__yxml","attr","map","childNodes","_bindToDom","_this4","document","createElement","keysPrimitives","get","requestTransaction","regeneratorRuntime","mark","_callee","children","_loop","_this5","wrap","_context2","prev","next","_context","hasOwnProperty","val","delegateYield","getType","t0","stop","all","inserts","ins","addEventListener","removeEventListener","_changed","_args3","arguments","_context3","typeDefinition","apply","CustomType","class","struct","parseArguments","arg","tagName","appendAdditionalInfo","op","typestruct","properties","_context4","Map","createType","info","requires","initType","YXmlInitializer","model","_context5","Struct","List","JSON","stringify","opContent","t1","abrupt","defineProperties","props","descriptor","defineProperty","protoProps","staticProps","object","property","receiver","Function","desc","getOwnPropertyDescriptor","undefined","parent","getter"],"mappings":"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","file":"y-xml.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/* global Y, MutationObserver */\n'use strict'\n\nfunction extend (Y) {\n  Y.requestModules(['Array', 'Map']).then(function () {\n    class YXml extends Y.Array.typeDefinition['class'] {\n      constructor (os, _model, _content, attributes, tagname, init) {\n        super(os, _model, _content)\n        this.attributes = attributes\n        this.dom = null\n        this._domObserver = null\n        this._eventListenerHandler = new Y.utils.EventListenerHandler()\n        this.tagname = tagname\n        if (init != null && init.dom != null) {\n          this._setDom(init.dom)\n        }\n        super.observe(events => {\n          var userEvents = []\n          events.forEach(event => {\n            if (event.type === 'insert') {\n              userEvents.push({\n                type: 'childInserted',\n                index: event.index,\n                node: event.value,\n                valueId: event.valueId\n              })\n            } else if (event.type === 'delete') {\n              userEvents.push({\n                type: 'childRemoved',\n                index: event.index,\n                _content: event._content,\n                value: event.value\n              })\n            }\n          })\n          if (userEvents.length > 0) {\n            this._eventListenerHandler.callEventListeners(userEvents)\n          }\n        })\n        attributes.observe(events => {\n          var userEvents = []\n          events.forEach(event => {\n            if (event.type === 'update' || event.type === 'add') {\n              userEvents.push({\n                type: 'attributeChanged',\n                name: event.name,\n                value: event.value\n              })\n            } else if (event.type === 'delete') {\n              userEvents.push({\n                type: 'attributeRemoved',\n                name: event.name\n              })\n            }\n          })\n          if (userEvents.length > 0) {\n            this._eventListenerHandler.callEventListeners(userEvents)\n          }\n        })\n      }\n      _destroy () {\n        if (this._domObserver != null) {\n          this._domObserver.disconnect()\n        }\n        this._eventListenerHandler.destroy()\n        this._eventListenerHandler = null\n        super._destroy()\n      }\n      insert (pos, types) {\n        if (!Array.isArray(types)) {\n          throw new Error('Expected an Array of content!')\n        }\n        types.forEach(function (v) {\n          var t = Y.utils.isTypeDefinition(v)\n          if (!(v && (\n                       typeof v === 'string' ||\n                       (t && t[0].class === YXml)\n             ))) {\n            throw new Error('Expected Y.Xml type or String!')\n          }\n        })\n        super.insert(pos, types)\n      }\n      // binds to a dom element\n      // Only call if dom and YXml are isomorph\n      _bindToDom (dom) {\n        return new Promise(resolve => {\n          // this function makes sure that either the\n          // dom event is executed, or the yjs observer is executed\n          var token = true\n          var mutualExclude = f => {\n            // take and process current records\n            var records = this._domObserver.takeRecords()\n            if (records.length > 0) {\n              this._domObserverListener(records)\n            }\n            if (token) {\n              token = false\n              try {\n                f()\n              } catch (e) {\n                // discard created records\n                this._domObserver.takeRecords()\n                token = true\n                throw e\n              }\n              this._domObserver.takeRecords()\n              token = true\n            }\n          }\n          this._mutualExclude = mutualExclude\n          this._domObserverListener = mutations => {\n            mutualExclude(() => {\n              mutations.forEach(mutation => {\n                if (mutation.type === 'attributes') {\n                  this.attributes.set(mutation.attributeName, mutation.target.getAttribute(mutation.attributeName))\n                } else if (mutation.type === 'childList') {\n                  for (let i = 0; i < mutation.addedNodes.length; i++) {\n                    let n = mutation.addedNodes[i]\n                    // compute position\n                    // special case, n.nextSibling is not yet inserted. So we find the next inserted element!\n                    var pos = -1\n                    var nextSibling = n.nextSibling\n                    while (pos < 0) {\n                      if (nextSibling == null) {\n                        pos = this._content.length\n                      } else {\n                        pos = this._content.findIndex(function (c) { return c.dom === nextSibling })\n                        nextSibling = nextSibling.nextSibling\n                      }\n                    }\n                    var c\n                    if (n instanceof window.Text) {\n                      c = n.textContent\n                    } else if (n instanceof window.Element) {\n                      c = Y.Xml(n)\n                    } else {\n                      throw new Error('Unsupported XML Element found. Synchronization will no longer work!')\n                    }\n                    this.insert(pos, [c])\n                    var content = this._content[pos]\n                    content.dom = n\n                    content.isInserted = true\n                    _tryInsertDom(pos - 1)\n                  }\n                  Array.prototype.forEach.call(mutation.removedNodes, n => {\n                    var pos = this._content.findIndex(function (c) {\n                      return c.dom === n\n                    })\n                    this.delete(pos)\n                  })\n                }\n              })\n            })\n          }\n          this._domObserver = new MutationObserver(this._domObserverListener)\n          this._domObserver.observe(dom, { attributes: true, childList: true })\n          // In order to insert a new node, successor needs to be inserted\n          // when c.dom can be inserted, try to insert the predecessors too\n          var _tryInsertDom = (pos) => {\n            var c = this._content[pos]\n            var succ\n            if (pos + 1 < this._content.length) {\n              succ = this._content[pos + 1]\n            } else {\n              // pseudo successor\n              succ = {\n                isInserted: true,\n                dom: null\n              }\n            }\n            while (pos >= 0 && succ.isInserted && c.dom != null && !c.isInserted) {\n              dom.insertBefore(c.dom, succ.dom)\n              c.isInserted = true\n              succ = c\n              c = this._content[--pos]\n            }\n          }\n          this._tryInsertDom = _tryInsertDom\n          this.observe(events => {\n            mutualExclude(() => {\n              events.sort(function (a, b) {\n                return a.index < b.index\n              }).forEach(event => {\n                if (event.type === 'attributeChanged') {\n                  dom.setAttribute(event.name, event.value)\n                } else if (event.type === 'attributeRemoved') {\n                  dom.removeAttribute(event.name)\n                } else if (event.type === 'childInserted') {\n                  if (typeof event.node === 'string') {\n                    var textNode = new window.Text(event.node)\n                    this._content[event.index].dom = textNode\n                    _tryInsertDom(event.index)\n                  } else {\n                    event.node().then(xml => {\n                      return xml.getDom()\n                    }).then(newNode => {\n                      mutualExclude(() => {\n                        // This is called async. So we have to compute the position again\n                        // also mutual excluse this\n                        var pos = this._content.findIndex(function (c) {\n                          return c.id === event.valueId\n                        })\n                        if (pos >= 0) {\n                          this._content[pos].dom = newNode\n                          _tryInsertDom(pos)\n                        }\n                      })\n                    })\n                  }\n                } else if (event.type === 'childRemoved') {\n                  var d = event._content.dom\n                  if (d != null) {\n                    d.remove()\n                  }\n                  _tryInsertDom(event.index - 1)\n                }\n              })\n            })\n          })\n          resolve(dom)\n        })\n      }\n      _setDom (dom) {\n        if (this.dom != null) {\n          throw new Error('Only call this method if you know what you are doing ;)')\n        } else if (dom.__yxml != null) { // TODO do i need to check this? - no.. but for dev purps..\n          throw new Error('Already bound to an YXml type')\n        } else {\n          dom.__yxml = this._model\n          // tag is already set in constructor\n          // set attributes\n          for (var i = 0; i < dom.attributes.length; i++) {\n            var attr = dom.attributes[i]\n            this.attributes.set(attr.name, attr.value)\n          }\n          this.insert(0, Array.prototype.map.call(dom.childNodes, function (c, i) {\n            if (c instanceof window.Element) {\n              return Y.Xml(c)\n            } else if (c instanceof window.Text) {\n              return c.textContent\n            } else {\n              throw new Error('Unknown node type!')\n            }\n          }))\n          Array.prototype.forEach.call(dom.childNodes, (dom, i) => {\n            var c = this._content[i]\n            c.dom = dom\n            c.isInserted = true\n          })\n          this.dom = this._bindToDom(dom)\n          return this.dom\n        }\n        return this.dom\n      }\n      getDom () {\n        if (this.dom == null) {\n          var dom = document.createElement(this.tagname)\n          dom.__yxml = this\n          this.attributes.keysPrimitives().forEach(key => {\n            dom.setAttribute(key, this.attributes.get(key))\n          })\n          return new Promise((resolve) => {\n            var self = this\n            this.os.requestTransaction(function *() {\n              var children = [] // <Promise([dom, content_i])>\n              for (var i = 0; i < self._content.length; i++) {\n                let c = self._content[i]\n                if (c.hasOwnProperty('val')) {\n                  children.push([new window.Text(c.val), c])\n                } else {\n                  var type = yield* this.getType(c.type)\n                  children.push(type.getDom().then(function (dom) {\n                    return [dom, c]\n                  }))\n                }\n              }\n              self.dom = self._bindToDom(dom)\n              Promise.all(children).then(function (inserts) {\n                self._mutualExclude(function () {\n                  inserts.forEach(function (ins, i) {\n                    // need to find position again, because this could be deleted (though this is very unlikely)\n                    var pos\n                    if (self._content[i] === ins[1]) {\n                      // likeliest case\n                      pos = i\n                    } else {\n                      // find content again\n                      pos = self._content.findIndex(function (c) {\n                        return c === ins[1]\n                      })\n                    }\n                    if (pos >= 0) {\n                      // not deleted, insert dom\n                      ins[1].dom = ins[0]\n                      self._tryInsertDom(pos)\n                    }\n                  })\n                  self.dom.then(resolve)\n                })\n              })\n            })\n          })\n        }\n        return this.dom\n      }\n      observe (f) {\n        this._eventListenerHandler.addEventListener(f)\n      }\n      unobserve (f) {\n        this._eventListenerHandler.removeEventListener(f)\n      }\n      * _changed () {\n        if (this._domObserver != null) {\n          this._domObserverListener(this._domObserver.takeRecords())\n        }\n        yield* Y.Array.typeDefinition['class'].prototype._changed.apply(this, arguments)\n      }\n    }\n    Y.extend('Xml', new Y.utils.CustomType({\n      name: 'Xml',\n      class: YXml,\n      struct: 'List',\n      parseArguments: function (arg) {\n        if (typeof arg === 'string') {\n          return [this, {\n            tagname: arg\n          }]\n        } else if (arg instanceof window.Element) {\n          return [this, {\n            tagname: arg.tagName,\n            dom: arg\n          }]\n        } else {\n          throw new Error('Y.Xml requires an argument which is a string!')\n        }\n      },\n      appendAdditionalInfo: function * (op, init) {\n        var id = null\n        if (op.id[0] === '_') {\n          var typestruct = Y.Map.typeDefinition.struct\n          id = ['_', typestruct + '_' + 'Map_' + op.id[1]]\n        }\n        var properties = yield* this.createType(Y.Map(), id)\n        op.info = {\n          tagname: init.tagname\n        }\n        op.requires = [properties._model] // XML requires that 'properties' exists\n      },\n      initType: function * YXmlInitializer (os, model, init) {\n        var _content = yield* Y.Struct.List.map.call(this, model, function (op) {\n          var c = {\n            id: JSON.stringify(op.id)\n          }\n          if (op.hasOwnProperty('opContent')) {\n            c.type = op.opContent\n          } else {\n            c.val = op.content\n          }\n          return c\n        })\n        var properties = yield* this.getType(model.requires[0]) // get the only required op\n        return new YXml(os, model.id, _content, properties, model.info.tagname, init)\n      }\n    }))\n  })\n}\n\nmodule.exports = extend\nif (typeof Y !== 'undefined') {\n  extend(Y)\n}\n","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n/* global Y, MutationObserver */\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction extend(Y) {\n  Y.requestModules(['Array', 'Map']).then(function () {\n    var YXml = function (_Y$Array$typeDefiniti) {\n      _inherits(YXml, _Y$Array$typeDefiniti);\n\n      function YXml(os, _model, _content, attributes, tagname, init) {\n        _classCallCheck(this, YXml);\n\n        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(YXml).call(this, os, _model, _content));\n\n        _this.attributes = attributes;\n        _this.dom = null;\n        _this._domObserver = null;\n        _this._eventListenerHandler = new Y.utils.EventListenerHandler();\n        _this.tagname = tagname;\n        if (init != null && init.dom != null) {\n          _this._setDom(init.dom);\n        }\n        _get(Object.getPrototypeOf(YXml.prototype), 'observe', _this).call(_this, function (events) {\n          var userEvents = [];\n          events.forEach(function (event) {\n            if (event.type === 'insert') {\n              userEvents.push({\n                type: 'childInserted',\n                index: event.index,\n                node: event.value,\n                valueId: event.valueId\n              });\n            } else if (event.type === 'delete') {\n              userEvents.push({\n                type: 'childRemoved',\n                index: event.index,\n                _content: event._content,\n                value: event.value\n              });\n            }\n          });\n          if (userEvents.length > 0) {\n            _this._eventListenerHandler.callEventListeners(userEvents);\n          }\n        });\n        attributes.observe(function (events) {\n          var userEvents = [];\n          events.forEach(function (event) {\n            if (event.type === 'update' || event.type === 'add') {\n              userEvents.push({\n                type: 'attributeChanged',\n                name: event.name,\n                value: event.value\n              });\n            } else if (event.type === 'delete') {\n              userEvents.push({\n                type: 'attributeRemoved',\n                name: event.name\n              });\n            }\n          });\n          if (userEvents.length > 0) {\n            _this._eventListenerHandler.callEventListeners(userEvents);\n          }\n        });\n        return _this;\n      }\n\n      _createClass(YXml, [{\n        key: '_destroy',\n        value: function _destroy() {\n          if (this._domObserver != null) {\n            this._domObserver.disconnect();\n          }\n          this._eventListenerHandler.destroy();\n          this._eventListenerHandler = null;\n          _get(Object.getPrototypeOf(YXml.prototype), '_destroy', this).call(this);\n        }\n      }, {\n        key: 'insert',\n        value: function insert(pos, types) {\n          if (!Array.isArray(types)) {\n            throw new Error('Expected an Array of content!');\n          }\n          types.forEach(function (v) {\n            var t = Y.utils.isTypeDefinition(v);\n            if (!(v && (typeof v === 'string' || t && t[0].class === YXml))) {\n              throw new Error('Expected Y.Xml type or String!');\n            }\n          });\n          _get(Object.getPrototypeOf(YXml.prototype), 'insert', this).call(this, pos, types);\n        }\n        // binds to a dom element\n        // Only call if dom and YXml are isomorph\n\n      }, {\n        key: '_bindToDom',\n        value: function _bindToDom(dom) {\n          var _this2 = this;\n\n          return new Promise(function (resolve) {\n            // this function makes sure that either the\n            // dom event is executed, or the yjs observer is executed\n            var token = true;\n            var mutualExclude = function mutualExclude(f) {\n              // take and process current records\n              var records = _this2._domObserver.takeRecords();\n              if (records.length > 0) {\n                _this2._domObserverListener(records);\n              }\n              if (token) {\n                token = false;\n                try {\n                  f();\n                } catch (e) {\n                  // discard created records\n                  _this2._domObserver.takeRecords();\n                  token = true;\n                  throw e;\n                }\n                _this2._domObserver.takeRecords();\n                token = true;\n              }\n            };\n            _this2._mutualExclude = mutualExclude;\n            _this2._domObserverListener = function (mutations) {\n              mutualExclude(function () {\n                mutations.forEach(function (mutation) {\n                  if (mutation.type === 'attributes') {\n                    _this2.attributes.set(mutation.attributeName, mutation.target.getAttribute(mutation.attributeName));\n                  } else if (mutation.type === 'childList') {\n                    for (var i = 0; i < mutation.addedNodes.length; i++) {\n                      var n = mutation.addedNodes[i];\n                      // compute position\n                      // special case, n.nextSibling is not yet inserted. So we find the next inserted element!\n                      var pos = -1;\n                      var nextSibling = n.nextSibling;\n                      while (pos < 0) {\n                        if (nextSibling == null) {\n                          pos = _this2._content.length;\n                        } else {\n                          pos = _this2._content.findIndex(function (c) {\n                            return c.dom === nextSibling;\n                          });\n                          nextSibling = nextSibling.nextSibling;\n                        }\n                      }\n                      var c;\n                      if (n instanceof window.Text) {\n                        c = n.textContent;\n                      } else if (n instanceof window.Element) {\n                        c = Y.Xml(n);\n                      } else {\n                        throw new Error('Unsupported XML Element found. Synchronization will no longer work!');\n                      }\n                      _this2.insert(pos, [c]);\n                      var content = _this2._content[pos];\n                      content.dom = n;\n                      content.isInserted = true;\n                      _tryInsertDom(pos - 1);\n                    }\n                    Array.prototype.forEach.call(mutation.removedNodes, function (n) {\n                      var pos = _this2._content.findIndex(function (c) {\n                        return c.dom === n;\n                      });\n                      _this2.delete(pos);\n                    });\n                  }\n                });\n              });\n            };\n            _this2._domObserver = new MutationObserver(_this2._domObserverListener);\n            _this2._domObserver.observe(dom, { attributes: true, childList: true });\n            // In order to insert a new node, successor needs to be inserted\n            // when c.dom can be inserted, try to insert the predecessors too\n            var _tryInsertDom = function _tryInsertDom(pos) {\n              var c = _this2._content[pos];\n              var succ;\n              if (pos + 1 < _this2._content.length) {\n                succ = _this2._content[pos + 1];\n              } else {\n                // pseudo successor\n                succ = {\n                  isInserted: true,\n                  dom: null\n                };\n              }\n              while (pos >= 0 && succ.isInserted && c.dom != null && !c.isInserted) {\n                dom.insertBefore(c.dom, succ.dom);\n                c.isInserted = true;\n                succ = c;\n                c = _this2._content[--pos];\n              }\n            };\n            _this2._tryInsertDom = _tryInsertDom;\n            _this2.observe(function (events) {\n              mutualExclude(function () {\n                events.sort(function (a, b) {\n                  return a.index < b.index;\n                }).forEach(function (event) {\n                  if (event.type === 'attributeChanged') {\n                    dom.setAttribute(event.name, event.value);\n                  } else if (event.type === 'attributeRemoved') {\n                    dom.removeAttribute(event.name);\n                  } else if (event.type === 'childInserted') {\n                    if (typeof event.node === 'string') {\n                      var textNode = new window.Text(event.node);\n                      _this2._content[event.index].dom = textNode;\n                      _tryInsertDom(event.index);\n                    } else {\n                      event.node().then(function (xml) {\n                        return xml.getDom();\n                      }).then(function (newNode) {\n                        mutualExclude(function () {\n                          // This is called async. So we have to compute the position again\n                          // also mutual excluse this\n                          var pos = _this2._content.findIndex(function (c) {\n                            return c.id === event.valueId;\n                          });\n                          if (pos >= 0) {\n                            _this2._content[pos].dom = newNode;\n                            _tryInsertDom(pos);\n                          }\n                        });\n                      });\n                    }\n                  } else if (event.type === 'childRemoved') {\n                    var d = event._content.dom;\n                    if (d != null) {\n                      d.remove();\n                    }\n                    _tryInsertDom(event.index - 1);\n                  }\n                });\n              });\n            });\n            resolve(dom);\n          });\n        }\n      }, {\n        key: '_setDom',\n        value: function _setDom(dom) {\n          var _this3 = this;\n\n          if (this.dom != null) {\n            throw new Error('Only call this method if you know what you are doing ;)');\n          } else if (dom.__yxml != null) {\n            // TODO do i need to check this? - no.. but for dev purps..\n            throw new Error('Already bound to an YXml type');\n          } else {\n            dom.__yxml = this._model;\n            // tag is already set in constructor\n            // set attributes\n            for (var i = 0; i < dom.attributes.length; i++) {\n              var attr = dom.attributes[i];\n              this.attributes.set(attr.name, attr.value);\n            }\n            this.insert(0, Array.prototype.map.call(dom.childNodes, function (c, i) {\n              if (c instanceof window.Element) {\n                return Y.Xml(c);\n              } else if (c instanceof window.Text) {\n                return c.textContent;\n              } else {\n                throw new Error('Unknown node type!');\n              }\n            }));\n            Array.prototype.forEach.call(dom.childNodes, function (dom, i) {\n              var c = _this3._content[i];\n              c.dom = dom;\n              c.isInserted = true;\n            });\n            this.dom = this._bindToDom(dom);\n            return this.dom;\n          }\n          return this.dom;\n        }\n      }, {\n        key: 'getDom',\n        value: function getDom() {\n          var _this4 = this;\n\n          if (this.dom == null) {\n            var dom = document.createElement(this.tagname);\n            dom.__yxml = this;\n            this.attributes.keysPrimitives().forEach(function (key) {\n              dom.setAttribute(key, _this4.attributes.get(key));\n            });\n            return new Promise(function (resolve) {\n              var self = _this4;\n              _this4.os.requestTransaction(regeneratorRuntime.mark(function _callee() {\n                var _this5 = this;\n\n                var children, _loop, i, type;\n\n                return regeneratorRuntime.wrap(function _callee$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        children = []; // <Promise([dom, content_i])>\n\n                        _loop = regeneratorRuntime.mark(function _loop() {\n                          var c;\n                          return regeneratorRuntime.wrap(function _loop$(_context) {\n                            while (1) {\n                              switch (_context.prev = _context.next) {\n                                case 0:\n                                  c = self._content[i];\n\n                                  if (!c.hasOwnProperty('val')) {\n                                    _context.next = 5;\n                                    break;\n                                  }\n\n                                  children.push([new window.Text(c.val), c]);\n                                  _context.next = 8;\n                                  break;\n\n                                case 5:\n                                  return _context.delegateYield(_this5.getType(c.type), 't0', 6);\n\n                                case 6:\n                                  type = _context.t0;\n\n                                  children.push(type.getDom().then(function (dom) {\n                                    return [dom, c];\n                                  }));\n\n                                case 8:\n                                case 'end':\n                                  return _context.stop();\n                              }\n                            }\n                          }, _loop, _this5);\n                        });\n                        i = 0;\n\n                      case 3:\n                        if (!(i < self._content.length)) {\n                          _context2.next = 8;\n                          break;\n                        }\n\n                        return _context2.delegateYield(_loop(), 't0', 5);\n\n                      case 5:\n                        i++;\n                        _context2.next = 3;\n                        break;\n\n                      case 8:\n                        self.dom = self._bindToDom(dom);\n                        Promise.all(children).then(function (inserts) {\n                          self._mutualExclude(function () {\n                            inserts.forEach(function (ins, i) {\n                              // need to find position again, because this could be deleted (though this is very unlikely)\n                              var pos;\n                              if (self._content[i] === ins[1]) {\n                                // likeliest case\n                                pos = i;\n                              } else {\n                                // find content again\n                                pos = self._content.findIndex(function (c) {\n                                  return c === ins[1];\n                                });\n                              }\n                              if (pos >= 0) {\n                                // not deleted, insert dom\n                                ins[1].dom = ins[0];\n                                self._tryInsertDom(pos);\n                              }\n                            });\n                            self.dom.then(resolve);\n                          });\n                        });\n\n                      case 10:\n                      case 'end':\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee, this);\n              }));\n            });\n          }\n          return this.dom;\n        }\n      }, {\n        key: 'observe',\n        value: function observe(f) {\n          this._eventListenerHandler.addEventListener(f);\n        }\n      }, {\n        key: 'unobserve',\n        value: function unobserve(f) {\n          this._eventListenerHandler.removeEventListener(f);\n        }\n      }, {\n        key: '_changed',\n        value: regeneratorRuntime.mark(function _changed() {\n          var _args3 = arguments;\n          return regeneratorRuntime.wrap(function _changed$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  if (this._domObserver != null) {\n                    this._domObserverListener(this._domObserver.takeRecords());\n                  }\n                  return _context3.delegateYield(Y.Array.typeDefinition['class'].prototype._changed.apply(this, _args3), 't0', 2);\n\n                case 2:\n                case 'end':\n                  return _context3.stop();\n              }\n            }\n          }, _changed, this);\n        })\n      }]);\n\n      return YXml;\n    }(Y.Array.typeDefinition['class']);\n\n    Y.extend('Xml', new Y.utils.CustomType({\n      name: 'Xml',\n      class: YXml,\n      struct: 'List',\n      parseArguments: function parseArguments(arg) {\n        if (typeof arg === 'string') {\n          return [this, {\n            tagname: arg\n          }];\n        } else if (arg instanceof window.Element) {\n          return [this, {\n            tagname: arg.tagName,\n            dom: arg\n          }];\n        } else {\n          throw new Error('Y.Xml requires an argument which is a string!');\n        }\n      },\n      appendAdditionalInfo: regeneratorRuntime.mark(function appendAdditionalInfo(op, init) {\n        var id, typestruct, properties;\n        return regeneratorRuntime.wrap(function appendAdditionalInfo$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                id = null;\n\n                if (op.id[0] === '_') {\n                  typestruct = Y.Map.typeDefinition.struct;\n\n                  id = ['_', typestruct + '_' + 'Map_' + op.id[1]];\n                }\n                return _context4.delegateYield(this.createType(Y.Map(), id), 't0', 3);\n\n              case 3:\n                properties = _context4.t0;\n\n                op.info = {\n                  tagname: init.tagname\n                };\n                op.requires = [properties._model]; // XML requires that 'properties' exists\n\n              case 6:\n              case 'end':\n                return _context4.stop();\n            }\n          }\n        }, appendAdditionalInfo, this);\n      }),\n      initType: regeneratorRuntime.mark(function YXmlInitializer(os, model, init) {\n        var _content, properties;\n\n        return regeneratorRuntime.wrap(function YXmlInitializer$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                return _context5.delegateYield(Y.Struct.List.map.call(this, model, function (op) {\n                  var c = {\n                    id: JSON.stringify(op.id)\n                  };\n                  if (op.hasOwnProperty('opContent')) {\n                    c.type = op.opContent;\n                  } else {\n                    c.val = op.content;\n                  }\n                  return c;\n                }), 't0', 1);\n\n              case 1:\n                _content = _context5.t0;\n                return _context5.delegateYield(this.getType(model.requires[0]), 't1', 3);\n\n              case 3:\n                properties = _context5.t1;\n                return _context5.abrupt('return', new YXml(os, model.id, _content, properties, model.info.tagname, init));\n\n              case 5:\n              case 'end':\n                return _context5.stop();\n            }\n          }\n        }, YXmlInitializer, this);\n      })\n    }));\n  });\n}\n\nmodule.exports = extend;\nif (typeof Y !== 'undefined') {\n  extend(Y);\n}\n\n},{}]},{},[1])\n\n"],"sourceRoot":"/source/"}