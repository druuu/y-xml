{"version":3,"sources":["../yjs/node_modules/browserify/node_modules/browser-pack/_prelude.js","src/Xml.js","y-xml.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","extend","Y","requestModules","then","YXml","_Y$Array$typeDefiniti","os","_model","_content","attributes","tagname","init","this","_this","getPrototypeOf","dom","_domObserver","_eventListenerHandler","utils","EventListenerHandler","_setDom","_get","event","type","callEventListeners","index","nodes","values","observe","name","_createClass","key","disconnect","destroy","pos","types","Array","isArray","forEach","v","isTypeDefinition","_this2","Promise","resolve","token","mutualExclude","records","takeRecords","_domObserverListener","_mutualExclude","mutations","mutation","set","attributeName","target","getAttribute","addedNodes","nextSibling","findIndex","c","window","Text","textContent","Element","Xml","insert","content","isInserted","_tryInsertDom","removedNodes","MutationObserver","childList","succ","insertBefore","setAttribute","removeAttribute","textNode","valId","id","xmls","getDom","newNode","compareIds","remove","_this3","__yxml","attr","map","childNodes","_bindToDom","_this4","document","createElement","keysPrimitives","get","requestTransaction","regeneratorRuntime","mark","_callee","children","_loop","_this5","wrap","_context2","prev","next","_context","hasOwnProperty","push","val","delegateYield","getType","t0","stop","all","inserts","ins","addEventListener","removeEventListener","_changed","_args3","arguments","_context3","typeDefinition","apply","CustomType","class","struct","parseArguments","arg","tagName","appendAdditionalInfo","op","typestruct","properties","_context4","Map","createType","info","requires","initType","YXmlInitializer","model","_context5","Struct","List","opContent","t1","abrupt","defineProperties","props","descriptor","defineProperty","protoProps","staticProps","object","property","receiver","Function","desc","getOwnPropertyDescriptor","undefined","parent","getter"],"mappings":"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","file":"y-xml.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/* global Y, MutationObserver */\n'use strict'\n\nfunction extend (Y) {\n  Y.requestModules(['Array', 'Map']).then(function () {\n    class YXml extends Y.Array.typeDefinition['class'] {\n      constructor (os, _model, _content, attributes, tagname, init) {\n        super(os, _model, _content)\n        this.attributes = attributes\n        this.dom = null\n        this._domObserver = null\n        this._eventListenerHandler = new Y.utils.EventListenerHandler()\n        this.tagname = tagname\n        if (init != null && init.dom != null) {\n          this._setDom(init.dom)\n        }\n        super.observe(event => {\n          if (event.type === 'insert') {\n            this._eventListenerHandler.callEventListeners({\n              type: 'childInserted',\n              index: event.index,\n              nodes: event.values\n            })\n          } else if (event.type === 'delete') {\n            this._eventListenerHandler.callEventListeners({\n              type: 'childRemoved',\n              index: event.index,\n              _content: event._content,\n              values: event.values\n            })\n          }\n        })\n        attributes.observe(event => {\n          if (event.type === 'update' || event.type === 'add') {\n            this._eventListenerHandler.callEventListeners({\n              type: 'attributeChanged',\n              name: event.name,\n              value: event.value\n            })\n          } else if (event.type === 'delete') {\n            this._eventListenerHandler.callEventListeners({\n              type: 'attributeRemoved',\n              name: event.name\n            })\n          }\n        })\n      }\n      _destroy () {\n        if (this._domObserver != null) {\n          this._domObserver.disconnect()\n        }\n        this._eventListenerHandler.destroy()\n        this._eventListenerHandler = null\n        super._destroy()\n      }\n      insert (pos, types) {\n        if (!Array.isArray(types)) {\n          throw new Error('Expected an Array of content!')\n        }\n        types.forEach(function (v) {\n          var t = Y.utils.isTypeDefinition(v)\n          if (!(v != null && (\n                       typeof v === 'string' ||\n                       (t && t[0].class === YXml)\n             ))) {\n            throw new Error('Expected Y.Xml type or String!')\n          }\n        })\n        super.insert(pos, types)\n      }\n      // binds to a dom element\n      // Only call if dom and YXml are isomorph\n      _bindToDom (dom) {\n        return new Promise(resolve => {\n          // this function makes sure that either the\n          // dom event is executed, or the yjs observer is executed\n          var token = true\n          var mutualExclude = f => {\n            // take and process current records\n            var records = this._domObserver.takeRecords()\n            if (records.length > 0) {\n              this._domObserverListener(records)\n            }\n            if (token) {\n              token = false\n              try {\n                f()\n              } catch (e) {\n                // discard created records\n                this._domObserver.takeRecords()\n                token = true\n                throw e\n              }\n              this._domObserver.takeRecords()\n              token = true\n            }\n          }\n          this._mutualExclude = mutualExclude\n          this._domObserverListener = mutations => {\n            mutualExclude(() => {\n              mutations.forEach(mutation => {\n                if (mutation.type === 'attributes') {\n                  this.attributes.set(mutation.attributeName, mutation.target.getAttribute(mutation.attributeName))\n                } else if (mutation.type === 'childList') {\n                  for (let i = 0; i < mutation.addedNodes.length; i++) {\n                    let n = mutation.addedNodes[i]\n                    // compute position\n                    // special case, n.nextSibling is not yet inserted. So we find the next inserted element!\n                    var pos = -1\n                    var nextSibling = n.nextSibling\n                    while (pos < 0) {\n                      if (nextSibling == null) {\n                        pos = this._content.length\n                      } else {\n                        pos = this._content.findIndex(function (c) { return c.dom === nextSibling })\n                        nextSibling = nextSibling.nextSibling\n                      }\n                    }\n                    var c\n                    if (n instanceof window.Text) {\n                      c = n.textContent\n                    } else if (n instanceof window.Element) {\n                      c = Y.Xml(n)\n                    } else {\n                      throw new Error('Unsupported XML Element found. Synchronization will no longer work!')\n                    }\n                    this.insert(pos, [c])\n                    var content = this._content[pos]\n                    content.dom = n\n                    content.isInserted = true\n                    _tryInsertDom(pos - 1)\n                  }\n                  Array.prototype.forEach.call(mutation.removedNodes, n => {\n                    var pos = this._content.findIndex(function (c) {\n                      return c.dom === n\n                    })\n                    this.delete(pos)\n                  })\n                }\n              })\n            })\n          }\n          this._domObserver = new MutationObserver(this._domObserverListener)\n          this._domObserver.observe(dom, { attributes: true, childList: true })\n          // In order to insert a new node, successor needs to be inserted\n          // when c.dom can be inserted, try to insert the predecessors too\n          var _tryInsertDom = (pos) => {\n            var c = this._content[pos]\n            var succ\n            if (pos + 1 < this._content.length) {\n              succ = this._content[pos + 1]\n            } else {\n              // pseudo successor\n              succ = {\n                isInserted: true,\n                dom: null\n              }\n            }\n            while (pos >= 0 && succ.isInserted && c.dom != null && !c.isInserted) {\n              dom.insertBefore(c.dom, succ.dom)\n              c.isInserted = true\n              succ = c\n              c = this._content[--pos]\n            }\n          }\n          this._tryInsertDom = _tryInsertDom\n          this.observe(event => {\n            mutualExclude(() => {\n              if (event.type === 'attributeChanged') {\n                dom.setAttribute(event.name, event.value)\n              } else if (event.type === 'attributeRemoved') {\n                dom.removeAttribute(event.name)\n              } else if (event.type === 'childInserted') {\n                if (typeof event.nodes !== 'function') { // its string\n                  event.nodes.forEach((n, i) => {\n                    var textNode = new window.Text(n)\n                    this._content[event.index + i].dom = textNode\n                    _tryInsertDom(event.index + i)\n                  })\n                } else {\n                  var valId = this._content[event.index].id\n                  event.nodes().then(xmls => {\n                    return xmls[0].getDom()\n                  }).then(newNode => {\n                    mutualExclude(() => {\n                      // This is called async. So we have to compute the position again\n                      // also mutual excluse this\n                      var pos\n                      if (event.index < this._content.length && Y.utils.compareIds(this._content[event.index].id, valId)) {\n                        pos = event.index\n                      } else {\n                        pos = this._content.findIndex(function (c) {\n                          return Y.utils.compareIds(c.id, valId)\n                        })\n                      }\n                      if (pos >= 0) {\n                        this._content[pos].dom = newNode\n                        _tryInsertDom(pos)\n                      }\n                    })\n                  })\n                }\n              } else if (event.type === 'childRemoved') {\n                event._content.forEach(function (c) {\n                  if (c.dom != null) {\n                    c.dom.remove()\n                  }\n                  _tryInsertDom(event.index - 1)\n                })\n              }\n            })\n          })\n          resolve(dom)\n        })\n      }\n      _setDom (dom) {\n        if (this.dom != null) {\n          throw new Error('Only call this method if you know what you are doing ;)')\n        } else if (dom.__yxml != null) { // TODO do i need to check this? - no.. but for dev purps..\n          throw new Error('Already bound to an YXml type')\n        } else {\n          dom.__yxml = this._model\n          // tag is already set in constructor\n          // set attributes\n          for (var i = 0; i < dom.attributes.length; i++) {\n            var attr = dom.attributes[i]\n            this.attributes.set(attr.name, attr.value)\n          }\n          this.insert(0, Array.prototype.map.call(dom.childNodes, function (c, i) {\n            if (c instanceof window.Element) {\n              return Y.Xml(c)\n            } else if (c instanceof window.Text) {\n              return c.textContent\n            } else {\n              throw new Error('Unknown node type!')\n            }\n          }))\n          Array.prototype.forEach.call(dom.childNodes, (dom, i) => {\n            var c = this._content[i]\n            c.dom = dom\n            c.isInserted = true\n          })\n          this.dom = this._bindToDom(dom)\n          return this.dom\n        }\n      }\n      getDom () {\n        if (this.dom == null) {\n          var dom = document.createElement(this.tagname)\n          dom.__yxml = this\n          this.attributes.keysPrimitives().forEach(key => {\n            dom.setAttribute(key, this.attributes.get(key))\n          })\n          return new Promise((resolve) => {\n            var self = this\n            this.os.requestTransaction(function *() {\n              var children = [] // <Promise([dom, content_i])>\n              for (var i = 0; i < self._content.length; i++) {\n                let c = self._content[i]\n                if (c.hasOwnProperty('val')) {\n                  children.push([new window.Text(c.val), c])\n                } else {\n                  var type = yield* this.getType(c.type)\n                  children.push(type.getDom().then(function (dom) {\n                    return [dom, c]\n                  }))\n                }\n              }\n              self.dom = self._bindToDom(dom)\n              Promise.all(children).then(function (inserts) {\n                self._mutualExclude(function () {\n                  inserts.forEach(function (ins, i) {\n                    // need to find position again, because this could be deleted (though this is very unlikely)\n                    var pos\n                    if (self._content[i] === ins[1]) {\n                      // likeliest case\n                      pos = i\n                    } else {\n                      // find content again\n                      pos = self._content.findIndex(function (c) {\n                        return c === ins[1]\n                      })\n                    }\n                    if (pos >= 0) {\n                      // not deleted, insert dom\n                      ins[1].dom = ins[0]\n                      self._tryInsertDom(pos)\n                    }\n                  })\n                  self.dom.then(resolve)\n                })\n              })\n            })\n          })\n        }\n        return this.dom\n      }\n      observe (f) {\n        this._eventListenerHandler.addEventListener(f)\n      }\n      unobserve (f) {\n        this._eventListenerHandler.removeEventListener(f)\n      }\n      * _changed () {\n        if (this._domObserver != null) {\n          this._domObserverListener(this._domObserver.takeRecords())\n        }\n        yield* Y.Array.typeDefinition['class'].prototype._changed.apply(this, arguments)\n      }\n    }\n    Y.extend('Xml', new Y.utils.CustomType({\n      name: 'Xml',\n      class: YXml,\n      struct: 'List',\n      parseArguments: function (arg) {\n        if (typeof arg === 'string') {\n          return [this, {\n            tagname: arg\n          }]\n        } else if (arg instanceof window.Element) {\n          return [this, {\n            tagname: arg.tagName,\n            dom: arg\n          }]\n        } else {\n          throw new Error('Y.Xml requires an argument which is a string!')\n        }\n      },\n      appendAdditionalInfo: function * (op, init) {\n        var id = null\n        if (op.id[0] === '_') {\n          var typestruct = Y.Map.typeDefinition.struct\n          id = ['_', typestruct + '_' + 'Map_' + op.id[1]]\n        }\n        var properties = yield* this.createType(Y.Map(), id)\n        op.info = {\n          tagname: init.tagname\n        }\n        op.requires = [properties._model] // XML requires that 'properties' exists\n      },\n      initType: function * YXmlInitializer (os, model, init) {\n        var _content = []\n        yield* Y.Struct.List.map.call(this, model, function (op) {\n          if (op.hasOwnProperty('opContent')) {\n            _content.push({\n              id: op.id,\n              type: op.opContent\n            })\n          } else {\n            op.content.forEach(function (c, i) {\n              _content.push({\n                id: [op.id[0], op.id[1] + i],\n                val: op.content[i]\n              })\n            })\n          }\n        })\n        var properties = yield* this.getType(model.requires[0]) // get the only required op\n        return new YXml(os, model.id, _content, properties, model.info.tagname, init)\n      }\n    }))\n  })\n}\n\nmodule.exports = extend\nif (typeof Y !== 'undefined') {\n  extend(Y)\n}\n","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n/* global Y, MutationObserver */\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction extend(Y) {\n  Y.requestModules(['Array', 'Map']).then(function () {\n    var YXml = function (_Y$Array$typeDefiniti) {\n      _inherits(YXml, _Y$Array$typeDefiniti);\n\n      function YXml(os, _model, _content, attributes, tagname, init) {\n        _classCallCheck(this, YXml);\n\n        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(YXml).call(this, os, _model, _content));\n\n        _this.attributes = attributes;\n        _this.dom = null;\n        _this._domObserver = null;\n        _this._eventListenerHandler = new Y.utils.EventListenerHandler();\n        _this.tagname = tagname;\n        if (init != null && init.dom != null) {\n          _this._setDom(init.dom);\n        }\n        _get(Object.getPrototypeOf(YXml.prototype), 'observe', _this).call(_this, function (event) {\n          if (event.type === 'insert') {\n            _this._eventListenerHandler.callEventListeners({\n              type: 'childInserted',\n              index: event.index,\n              nodes: event.values\n            });\n          } else if (event.type === 'delete') {\n            _this._eventListenerHandler.callEventListeners({\n              type: 'childRemoved',\n              index: event.index,\n              _content: event._content,\n              values: event.values\n            });\n          }\n        });\n        attributes.observe(function (event) {\n          if (event.type === 'update' || event.type === 'add') {\n            _this._eventListenerHandler.callEventListeners({\n              type: 'attributeChanged',\n              name: event.name,\n              value: event.value\n            });\n          } else if (event.type === 'delete') {\n            _this._eventListenerHandler.callEventListeners({\n              type: 'attributeRemoved',\n              name: event.name\n            });\n          }\n        });\n        return _this;\n      }\n\n      _createClass(YXml, [{\n        key: '_destroy',\n        value: function _destroy() {\n          if (this._domObserver != null) {\n            this._domObserver.disconnect();\n          }\n          this._eventListenerHandler.destroy();\n          this._eventListenerHandler = null;\n          _get(Object.getPrototypeOf(YXml.prototype), '_destroy', this).call(this);\n        }\n      }, {\n        key: 'insert',\n        value: function insert(pos, types) {\n          if (!Array.isArray(types)) {\n            throw new Error('Expected an Array of content!');\n          }\n          types.forEach(function (v) {\n            var t = Y.utils.isTypeDefinition(v);\n            if (!(v != null && (typeof v === 'string' || t && t[0].class === YXml))) {\n              throw new Error('Expected Y.Xml type or String!');\n            }\n          });\n          _get(Object.getPrototypeOf(YXml.prototype), 'insert', this).call(this, pos, types);\n        }\n        // binds to a dom element\n        // Only call if dom and YXml are isomorph\n\n      }, {\n        key: '_bindToDom',\n        value: function _bindToDom(dom) {\n          var _this2 = this;\n\n          return new Promise(function (resolve) {\n            // this function makes sure that either the\n            // dom event is executed, or the yjs observer is executed\n            var token = true;\n            var mutualExclude = function mutualExclude(f) {\n              // take and process current records\n              var records = _this2._domObserver.takeRecords();\n              if (records.length > 0) {\n                _this2._domObserverListener(records);\n              }\n              if (token) {\n                token = false;\n                try {\n                  f();\n                } catch (e) {\n                  // discard created records\n                  _this2._domObserver.takeRecords();\n                  token = true;\n                  throw e;\n                }\n                _this2._domObserver.takeRecords();\n                token = true;\n              }\n            };\n            _this2._mutualExclude = mutualExclude;\n            _this2._domObserverListener = function (mutations) {\n              mutualExclude(function () {\n                mutations.forEach(function (mutation) {\n                  if (mutation.type === 'attributes') {\n                    _this2.attributes.set(mutation.attributeName, mutation.target.getAttribute(mutation.attributeName));\n                  } else if (mutation.type === 'childList') {\n                    for (var i = 0; i < mutation.addedNodes.length; i++) {\n                      var n = mutation.addedNodes[i];\n                      // compute position\n                      // special case, n.nextSibling is not yet inserted. So we find the next inserted element!\n                      var pos = -1;\n                      var nextSibling = n.nextSibling;\n                      while (pos < 0) {\n                        if (nextSibling == null) {\n                          pos = _this2._content.length;\n                        } else {\n                          pos = _this2._content.findIndex(function (c) {\n                            return c.dom === nextSibling;\n                          });\n                          nextSibling = nextSibling.nextSibling;\n                        }\n                      }\n                      var c;\n                      if (n instanceof window.Text) {\n                        c = n.textContent;\n                      } else if (n instanceof window.Element) {\n                        c = Y.Xml(n);\n                      } else {\n                        throw new Error('Unsupported XML Element found. Synchronization will no longer work!');\n                      }\n                      _this2.insert(pos, [c]);\n                      var content = _this2._content[pos];\n                      content.dom = n;\n                      content.isInserted = true;\n                      _tryInsertDom(pos - 1);\n                    }\n                    Array.prototype.forEach.call(mutation.removedNodes, function (n) {\n                      var pos = _this2._content.findIndex(function (c) {\n                        return c.dom === n;\n                      });\n                      _this2.delete(pos);\n                    });\n                  }\n                });\n              });\n            };\n            _this2._domObserver = new MutationObserver(_this2._domObserverListener);\n            _this2._domObserver.observe(dom, { attributes: true, childList: true });\n            // In order to insert a new node, successor needs to be inserted\n            // when c.dom can be inserted, try to insert the predecessors too\n            var _tryInsertDom = function _tryInsertDom(pos) {\n              var c = _this2._content[pos];\n              var succ;\n              if (pos + 1 < _this2._content.length) {\n                succ = _this2._content[pos + 1];\n              } else {\n                // pseudo successor\n                succ = {\n                  isInserted: true,\n                  dom: null\n                };\n              }\n              while (pos >= 0 && succ.isInserted && c.dom != null && !c.isInserted) {\n                dom.insertBefore(c.dom, succ.dom);\n                c.isInserted = true;\n                succ = c;\n                c = _this2._content[--pos];\n              }\n            };\n            _this2._tryInsertDom = _tryInsertDom;\n            _this2.observe(function (event) {\n              mutualExclude(function () {\n                if (event.type === 'attributeChanged') {\n                  dom.setAttribute(event.name, event.value);\n                } else if (event.type === 'attributeRemoved') {\n                  dom.removeAttribute(event.name);\n                } else if (event.type === 'childInserted') {\n                  if (typeof event.nodes !== 'function') {\n                    // its string\n                    event.nodes.forEach(function (n, i) {\n                      var textNode = new window.Text(n);\n                      _this2._content[event.index + i].dom = textNode;\n                      _tryInsertDom(event.index + i);\n                    });\n                  } else {\n                    var valId = _this2._content[event.index].id;\n                    event.nodes().then(function (xmls) {\n                      return xmls[0].getDom();\n                    }).then(function (newNode) {\n                      mutualExclude(function () {\n                        // This is called async. So we have to compute the position again\n                        // also mutual excluse this\n                        var pos;\n                        if (event.index < _this2._content.length && Y.utils.compareIds(_this2._content[event.index].id, valId)) {\n                          pos = event.index;\n                        } else {\n                          pos = _this2._content.findIndex(function (c) {\n                            return Y.utils.compareIds(c.id, valId);\n                          });\n                        }\n                        if (pos >= 0) {\n                          _this2._content[pos].dom = newNode;\n                          _tryInsertDom(pos);\n                        }\n                      });\n                    });\n                  }\n                } else if (event.type === 'childRemoved') {\n                  event._content.forEach(function (c) {\n                    if (c.dom != null) {\n                      c.dom.remove();\n                    }\n                    _tryInsertDom(event.index - 1);\n                  });\n                }\n              });\n            });\n            resolve(dom);\n          });\n        }\n      }, {\n        key: '_setDom',\n        value: function _setDom(dom) {\n          var _this3 = this;\n\n          if (this.dom != null) {\n            throw new Error('Only call this method if you know what you are doing ;)');\n          } else if (dom.__yxml != null) {\n            // TODO do i need to check this? - no.. but for dev purps..\n            throw new Error('Already bound to an YXml type');\n          } else {\n            dom.__yxml = this._model;\n            // tag is already set in constructor\n            // set attributes\n            for (var i = 0; i < dom.attributes.length; i++) {\n              var attr = dom.attributes[i];\n              this.attributes.set(attr.name, attr.value);\n            }\n            this.insert(0, Array.prototype.map.call(dom.childNodes, function (c, i) {\n              if (c instanceof window.Element) {\n                return Y.Xml(c);\n              } else if (c instanceof window.Text) {\n                return c.textContent;\n              } else {\n                throw new Error('Unknown node type!');\n              }\n            }));\n            Array.prototype.forEach.call(dom.childNodes, function (dom, i) {\n              var c = _this3._content[i];\n              c.dom = dom;\n              c.isInserted = true;\n            });\n            this.dom = this._bindToDom(dom);\n            return this.dom;\n          }\n        }\n      }, {\n        key: 'getDom',\n        value: function getDom() {\n          var _this4 = this;\n\n          if (this.dom == null) {\n            var dom = document.createElement(this.tagname);\n            dom.__yxml = this;\n            this.attributes.keysPrimitives().forEach(function (key) {\n              dom.setAttribute(key, _this4.attributes.get(key));\n            });\n            return new Promise(function (resolve) {\n              var self = _this4;\n              _this4.os.requestTransaction(regeneratorRuntime.mark(function _callee() {\n                var _this5 = this;\n\n                var children, _loop, i, type;\n\n                return regeneratorRuntime.wrap(function _callee$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        children = []; // <Promise([dom, content_i])>\n\n                        _loop = regeneratorRuntime.mark(function _loop() {\n                          var c;\n                          return regeneratorRuntime.wrap(function _loop$(_context) {\n                            while (1) {\n                              switch (_context.prev = _context.next) {\n                                case 0:\n                                  c = self._content[i];\n\n                                  if (!c.hasOwnProperty('val')) {\n                                    _context.next = 5;\n                                    break;\n                                  }\n\n                                  children.push([new window.Text(c.val), c]);\n                                  _context.next = 8;\n                                  break;\n\n                                case 5:\n                                  return _context.delegateYield(_this5.getType(c.type), 't0', 6);\n\n                                case 6:\n                                  type = _context.t0;\n\n                                  children.push(type.getDom().then(function (dom) {\n                                    return [dom, c];\n                                  }));\n\n                                case 8:\n                                case 'end':\n                                  return _context.stop();\n                              }\n                            }\n                          }, _loop, _this5);\n                        });\n                        i = 0;\n\n                      case 3:\n                        if (!(i < self._content.length)) {\n                          _context2.next = 8;\n                          break;\n                        }\n\n                        return _context2.delegateYield(_loop(), 't0', 5);\n\n                      case 5:\n                        i++;\n                        _context2.next = 3;\n                        break;\n\n                      case 8:\n                        self.dom = self._bindToDom(dom);\n                        Promise.all(children).then(function (inserts) {\n                          self._mutualExclude(function () {\n                            inserts.forEach(function (ins, i) {\n                              // need to find position again, because this could be deleted (though this is very unlikely)\n                              var pos;\n                              if (self._content[i] === ins[1]) {\n                                // likeliest case\n                                pos = i;\n                              } else {\n                                // find content again\n                                pos = self._content.findIndex(function (c) {\n                                  return c === ins[1];\n                                });\n                              }\n                              if (pos >= 0) {\n                                // not deleted, insert dom\n                                ins[1].dom = ins[0];\n                                self._tryInsertDom(pos);\n                              }\n                            });\n                            self.dom.then(resolve);\n                          });\n                        });\n\n                      case 10:\n                      case 'end':\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee, this);\n              }));\n            });\n          }\n          return this.dom;\n        }\n      }, {\n        key: 'observe',\n        value: function observe(f) {\n          this._eventListenerHandler.addEventListener(f);\n        }\n      }, {\n        key: 'unobserve',\n        value: function unobserve(f) {\n          this._eventListenerHandler.removeEventListener(f);\n        }\n      }, {\n        key: '_changed',\n        value: regeneratorRuntime.mark(function _changed() {\n          var _args3 = arguments;\n          return regeneratorRuntime.wrap(function _changed$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  if (this._domObserver != null) {\n                    this._domObserverListener(this._domObserver.takeRecords());\n                  }\n                  return _context3.delegateYield(Y.Array.typeDefinition['class'].prototype._changed.apply(this, _args3), 't0', 2);\n\n                case 2:\n                case 'end':\n                  return _context3.stop();\n              }\n            }\n          }, _changed, this);\n        })\n      }]);\n\n      return YXml;\n    }(Y.Array.typeDefinition['class']);\n\n    Y.extend('Xml', new Y.utils.CustomType({\n      name: 'Xml',\n      class: YXml,\n      struct: 'List',\n      parseArguments: function parseArguments(arg) {\n        if (typeof arg === 'string') {\n          return [this, {\n            tagname: arg\n          }];\n        } else if (arg instanceof window.Element) {\n          return [this, {\n            tagname: arg.tagName,\n            dom: arg\n          }];\n        } else {\n          throw new Error('Y.Xml requires an argument which is a string!');\n        }\n      },\n      appendAdditionalInfo: regeneratorRuntime.mark(function appendAdditionalInfo(op, init) {\n        var id, typestruct, properties;\n        return regeneratorRuntime.wrap(function appendAdditionalInfo$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                id = null;\n\n                if (op.id[0] === '_') {\n                  typestruct = Y.Map.typeDefinition.struct;\n\n                  id = ['_', typestruct + '_' + 'Map_' + op.id[1]];\n                }\n                return _context4.delegateYield(this.createType(Y.Map(), id), 't0', 3);\n\n              case 3:\n                properties = _context4.t0;\n\n                op.info = {\n                  tagname: init.tagname\n                };\n                op.requires = [properties._model]; // XML requires that 'properties' exists\n\n              case 6:\n              case 'end':\n                return _context4.stop();\n            }\n          }\n        }, appendAdditionalInfo, this);\n      }),\n      initType: regeneratorRuntime.mark(function YXmlInitializer(os, model, init) {\n        var _content, properties;\n\n        return regeneratorRuntime.wrap(function YXmlInitializer$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _content = [];\n                return _context5.delegateYield(Y.Struct.List.map.call(this, model, function (op) {\n                  if (op.hasOwnProperty('opContent')) {\n                    _content.push({\n                      id: op.id,\n                      type: op.opContent\n                    });\n                  } else {\n                    op.content.forEach(function (c, i) {\n                      _content.push({\n                        id: [op.id[0], op.id[1] + i],\n                        val: op.content[i]\n                      });\n                    });\n                  }\n                }), 't0', 2);\n\n              case 2:\n                return _context5.delegateYield(this.getType(model.requires[0]), 't1', 3);\n\n              case 3:\n                properties = _context5.t1;\n                return _context5.abrupt('return', new YXml(os, model.id, _content, properties, model.info.tagname, init));\n\n              case 5:\n              case 'end':\n                return _context5.stop();\n            }\n          }\n        }, YXmlInitializer, this);\n      })\n    }));\n  });\n}\n\nmodule.exports = extend;\nif (typeof Y !== 'undefined') {\n  extend(Y);\n}\n\n},{}]},{},[1])\n\n"],"sourceRoot":"/source/"}